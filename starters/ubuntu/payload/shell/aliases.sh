#!/bin/sh

# WARNING: DO NOT EDIT THIS FILE DIRECTLY.
# This file is an auto-generated or managed orchestrator.
# Your custom aliases should be defined in individual files within the 'aliases/' directory.

# Purpose:
# This script is designed to automatically source all POSIX-compliant alias definition files
# located within its accompanying 'aliases/' subdirectory.
# It ensures that all your categorized aliases are loaded consistently across
# different POSIX-compatible shells (e.g., Bash, Zsh, Dash).

# Usage:
# 1. Create new alias files: Place your custom aliases in separate files
#    (e.g., 'git.sh', 'dev-tools.sh') inside the 'aliases/' directory.
# 2. File Naming: All alias definition files MUST have a '.sh' extension.
# 3. POSIX Compliance: Ensure all files within 'aliases/' are strictly POSIX-compliant
#    to guarantee compatibility across various shells. Avoid Bash or Zsh specific syntax.

# --- Script Logic ---

# Determine the directory where this script resides.
# This method is POSIX-compliant and works reliably when the script is sourced.
# It captures the directory of the script file itself.
# In POSIX sh, '$0' refers to the script name, 'dirname' extracts its directory.
DROP_DX_ALIASES_DIR="$(dirname "$0")"

# Construct the full path to the directory containing individual alias files.
# This assumes the 'aliases/' directory is a direct subdirectory of where this script lives.
INDIVIDUAL_ALIASES_PATH="$DROP_DX_ALIASES_DIR/aliases"

# Check if the 'aliases/' directory exists and is indeed a directory.
if [ -d "$INDIVIDUAL_ALIASES_PATH" ]; then
  # Iterate through all files ending with '.sh' in the 'aliases/' directory.
  # The 'for' loop combined with a glob is a POSIX-compliant way to list files.
  for ALIAS_FILE in "$INDIVIDUAL_ALIASES_PATH"/*.sh; do
    # Check if the current item is a regular file before attempting to source it.
    # This prevents errors if there are no matching files or if directories exist.
    if [ -f "$ALIAS_FILE" ]; then
      # Source (execute) the alias file in the current shell environment.
      # The '.' command is the POSIX-compliant way to source a script.
      # SC1090: ShellCheck can't follow non-constant source. This is expected
      #         behavior for dynamic loading and often acceptable.
      # shellcheck disable=SC1090
      . "$ALIAS_FILE"
    fi
  done
else
  # Output a warning if the expected 'aliases/' directory is not found.
  # Error messages are directed to standard error (>&2).
  echo "dropdx: Warning: Alias directory '$INDIVIDUAL_ALIASES_PATH' not found." >&2
fi

# Clean up temporary variables to avoid polluting the shell's environment.
unset DROP_DX_ALIASES_DIR INDIVIDUAL_ALIASES_PATH ALIAS_FILE
